// Generated from /Users/harryharbuck-marlowe/Downloads/Q/src/main/java/core/etc/Q.g4 by ANTLR 4.9.2
package core.interp;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class QLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, Println=20, Component=21, Render=22, AddComponent=23, 
		New=24, Window=25, Var=26, AddWSText=27, Import=28, Print=29, Input=30, 
		Assert=31, Wait=32, Size=33, Def=34, ToInt=35, Create=36, WebServer=37, 
		If=38, Else=39, Return=40, For=41, While=42, To=43, Do=44, End=45, In=46, 
		Null=47, Try=48, Catch=49, Class=50, CreateClass=51, Or=52, And=53, Equals=54, 
		NEquals=55, GTEquals=56, LTEquals=57, Pow=58, Excl=59, GT=60, LT=61, Add=62, 
		Subtract=63, Multiply=64, Divide=65, Modulus=66, OBrace=67, CBrace=68, 
		OBracket=69, CBracket=70, OParen=71, CParen=72, SColon=73, Assign=74, 
		Comma=75, QMark=76, Colon=77, Bool=78, Number=79, Identifier=80, String=81, 
		Comment=82, JavaTextBlock=83, Space=84;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "Println", "Component", "Render", "AddComponent", "New", 
			"Window", "Var", "AddWSText", "Import", "Print", "Input", "Assert", "Wait", 
			"Size", "Def", "ToInt", "Create", "WebServer", "If", "Else", "Return", 
			"For", "While", "To", "Do", "End", "In", "Null", "Try", "Catch", "Class", 
			"CreateClass", "Or", "And", "Equals", "NEquals", "GTEquals", "LTEquals", 
			"Pow", "Excl", "GT", "LT", "Add", "Subtract", "Multiply", "Divide", "Modulus", 
			"OBrace", "CBrace", "OBracket", "CBracket", "OParen", "CParen", "SColon", 
			"Assign", "Comma", "QMark", "Colon", "Bool", "Number", "Identifier", 
			"String", "Comment", "JavaTextBlock", "Space", "Int", "Digit"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'.'", "'const'", "'File'", "'new File'", "'List'", "'add'", "'remove'", 
			"'sys'", "'exec'", "'append'", "'verify'", "'.default'", "'#'", "'github'", 
			"'Window'", "'new Component'", "'changeText'", "'func main()'", "'endc'", 
			"'std:ln'", "'Component'", "'render'", "'addComp'", "'new'", "'new Window'", 
			"'var'", "'WebServer.changeText'", "'import'", "'std:out'", "'std:in'", 
			"'assert'", "'wait'", "'size'", "'func'", "'toInt'", "'create'", "'WebServer'", 
			"'if'", "'else'", "'return'", "'for'", "'while'", "'to'", "'do'", "'endf'", 
			"'in'", "'null'", "'try'", "'catch'", "'class'", "'createClass'", "'||'", 
			"'&&'", "'=='", "'!='", "'>='", "'<='", "'^'", "'!'", "'>'", "'<'", "'+'", 
			"'-'", "'*'", "'/'", "'%'", "'{'", "'}'", "'['", "']'", "'('", "')'", 
			"';'", "'='", "','", "'?'", "':'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, "Println", "Component", 
			"Render", "AddComponent", "New", "Window", "Var", "AddWSText", "Import", 
			"Print", "Input", "Assert", "Wait", "Size", "Def", "ToInt", "Create", 
			"WebServer", "If", "Else", "Return", "For", "While", "To", "Do", "End", 
			"In", "Null", "Try", "Catch", "Class", "CreateClass", "Or", "And", "Equals", 
			"NEquals", "GTEquals", "LTEquals", "Pow", "Excl", "GT", "LT", "Add", 
			"Subtract", "Multiply", "Divide", "Modulus", "OBrace", "CBrace", "OBracket", 
			"CBracket", "OParen", "CParen", "SColon", "Assign", "Comma", "QMark", 
			"Colon", "Bool", "Number", "Identifier", "String", "Comment", "JavaTextBlock", 
			"Space"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public QLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Q.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2V\u02a1\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4"+
		"\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3"+
		"\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13"+
		"\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r"+
		"\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17"+
		"\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23"+
		"\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31"+
		"\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33"+
		"\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3"+
		"\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3"+
		"&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3*\3"+
		"*\3*\3*\3+\3+\3+\3+\3+\3+\3,\3,\3,\3-\3-\3-\3.\3.\3.\3.\3.\3/\3/\3/\3"+
		"\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3"+
		"\62\3\63\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3"+
		"\64\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\66\3\66\3\66\3\67\3\67\3\67\3"+
		"8\38\38\39\39\39\3:\3:\3:\3;\3;\3<\3<\3=\3=\3>\3>\3?\3?\3@\3@\3A\3A\3"+
		"B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3H\3H\3I\3I\3J\3J\3K\3K\3L\3L\3M\3"+
		"M\3N\3N\3O\3O\3O\3O\3O\3O\3O\3O\3O\5O\u0246\nO\3P\3P\3P\7P\u024b\nP\f"+
		"P\16P\u024e\13P\5P\u0250\nP\3Q\3Q\7Q\u0254\nQ\fQ\16Q\u0257\13Q\3R\3R\3"+
		"R\3R\7R\u025d\nR\fR\16R\u0260\13R\3R\3R\3R\3R\3R\7R\u0267\nR\fR\16R\u026a"+
		"\13R\3R\5R\u026d\nR\3S\3S\3S\3S\7S\u0273\nS\fS\16S\u0276\13S\3S\3S\3S"+
		"\3S\7S\u027c\nS\fS\16S\u027f\13S\3S\3S\5S\u0283\nS\3S\3S\3T\3T\3T\3T\7"+
		"T\u028b\nT\fT\16T\u028e\13T\3T\3T\3U\3U\3U\3U\3V\3V\7V\u0298\nV\fV\16"+
		"V\u029b\13V\3V\5V\u029e\nV\3W\3W\3\u027d\2X\3\3\5\4\7\5\t\6\13\7\r\b\17"+
		"\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+"+
		"\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+"+
		"U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081"+
		"B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH\u008fI\u0091J\u0093K\u0095"+
		"L\u0097M\u0099N\u009bO\u009dP\u009fQ\u00a1R\u00a3S\u00a5T\u00a7U\u00a9"+
		"V\u00ab\2\u00ad\2\3\2\f\5\2C\\aac|\6\2\62;C\\aac|\3\2$$\6\2\f\f\17\17"+
		"$$^^\4\2\f\f\17\17\3\2))\6\2\f\f\17\17))^^\5\2\13\f\16\17\"\"\3\2\63;"+
		"\3\2\62;\2\u02ae\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13"+
		"\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2"+
		"\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2"+
		"!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3"+
		"\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2"+
		"\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E"+
		"\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2"+
		"\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2"+
		"\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k"+
		"\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2"+
		"\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2"+
		"\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b"+
		"\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2"+
		"\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\2\u009d"+
		"\3\2\2\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\2\u00a5\3\2\2"+
		"\2\2\u00a7\3\2\2\2\2\u00a9\3\2\2\2\3\u00af\3\2\2\2\5\u00b1\3\2\2\2\7\u00b7"+
		"\3\2\2\2\t\u00bc\3\2\2\2\13\u00c5\3\2\2\2\r\u00ca\3\2\2\2\17\u00ce\3\2"+
		"\2\2\21\u00d5\3\2\2\2\23\u00d9\3\2\2\2\25\u00de\3\2\2\2\27\u00e5\3\2\2"+
		"\2\31\u00ec\3\2\2\2\33\u00f5\3\2\2\2\35\u00f7\3\2\2\2\37\u00fe\3\2\2\2"+
		"!\u0105\3\2\2\2#\u0113\3\2\2\2%\u011e\3\2\2\2\'\u012a\3\2\2\2)\u012f\3"+
		"\2\2\2+\u0136\3\2\2\2-\u0140\3\2\2\2/\u0147\3\2\2\2\61\u014f\3\2\2\2\63"+
		"\u0153\3\2\2\2\65\u015e\3\2\2\2\67\u0162\3\2\2\29\u0177\3\2\2\2;\u017e"+
		"\3\2\2\2=\u0186\3\2\2\2?\u018d\3\2\2\2A\u0194\3\2\2\2C\u0199\3\2\2\2E"+
		"\u019e\3\2\2\2G\u01a3\3\2\2\2I\u01a9\3\2\2\2K\u01b0\3\2\2\2M\u01ba\3\2"+
		"\2\2O\u01bd\3\2\2\2Q\u01c2\3\2\2\2S\u01c9\3\2\2\2U\u01cd\3\2\2\2W\u01d3"+
		"\3\2\2\2Y\u01d6\3\2\2\2[\u01d9\3\2\2\2]\u01de\3\2\2\2_\u01e1\3\2\2\2a"+
		"\u01e6\3\2\2\2c\u01ea\3\2\2\2e\u01f0\3\2\2\2g\u01f6\3\2\2\2i\u0202\3\2"+
		"\2\2k\u0205\3\2\2\2m\u0208\3\2\2\2o\u020b\3\2\2\2q\u020e\3\2\2\2s\u0211"+
		"\3\2\2\2u\u0214\3\2\2\2w\u0216\3\2\2\2y\u0218\3\2\2\2{\u021a\3\2\2\2}"+
		"\u021c\3\2\2\2\177\u021e\3\2\2\2\u0081\u0220\3\2\2\2\u0083\u0222\3\2\2"+
		"\2\u0085\u0224\3\2\2\2\u0087\u0226\3\2\2\2\u0089\u0228\3\2\2\2\u008b\u022a"+
		"\3\2\2\2\u008d\u022c\3\2\2\2\u008f\u022e\3\2\2\2\u0091\u0230\3\2\2\2\u0093"+
		"\u0232\3\2\2\2\u0095\u0234\3\2\2\2\u0097\u0236\3\2\2\2\u0099\u0238\3\2"+
		"\2\2\u009b\u023a\3\2\2\2\u009d\u0245\3\2\2\2\u009f\u0247\3\2\2\2\u00a1"+
		"\u0251\3\2\2\2\u00a3\u026c\3\2\2\2\u00a5\u0282\3\2\2\2\u00a7\u0286\3\2"+
		"\2\2\u00a9\u0291\3\2\2\2\u00ab\u029d\3\2\2\2\u00ad\u029f\3\2\2\2\u00af"+
		"\u00b0\7\60\2\2\u00b0\4\3\2\2\2\u00b1\u00b2\7e\2\2\u00b2\u00b3\7q\2\2"+
		"\u00b3\u00b4\7p\2\2\u00b4\u00b5\7u\2\2\u00b5\u00b6\7v\2\2\u00b6\6\3\2"+
		"\2\2\u00b7\u00b8\7H\2\2\u00b8\u00b9\7k\2\2\u00b9\u00ba\7n\2\2\u00ba\u00bb"+
		"\7g\2\2\u00bb\b\3\2\2\2\u00bc\u00bd\7p\2\2\u00bd\u00be\7g\2\2\u00be\u00bf"+
		"\7y\2\2\u00bf\u00c0\7\"\2\2\u00c0\u00c1\7H\2\2\u00c1\u00c2\7k\2\2\u00c2"+
		"\u00c3\7n\2\2\u00c3\u00c4\7g\2\2\u00c4\n\3\2\2\2\u00c5\u00c6\7N\2\2\u00c6"+
		"\u00c7\7k\2\2\u00c7\u00c8\7u\2\2\u00c8\u00c9\7v\2\2\u00c9\f\3\2\2\2\u00ca"+
		"\u00cb\7c\2\2\u00cb\u00cc\7f\2\2\u00cc\u00cd\7f\2\2\u00cd\16\3\2\2\2\u00ce"+
		"\u00cf\7t\2\2\u00cf\u00d0\7g\2\2\u00d0\u00d1\7o\2\2\u00d1\u00d2\7q\2\2"+
		"\u00d2\u00d3\7x\2\2\u00d3\u00d4\7g\2\2\u00d4\20\3\2\2\2\u00d5\u00d6\7"+
		"u\2\2\u00d6\u00d7\7{\2\2\u00d7\u00d8\7u\2\2\u00d8\22\3\2\2\2\u00d9\u00da"+
		"\7g\2\2\u00da\u00db\7z\2\2\u00db\u00dc\7g\2\2\u00dc\u00dd\7e\2\2\u00dd"+
		"\24\3\2\2\2\u00de\u00df\7c\2\2\u00df\u00e0\7r\2\2\u00e0\u00e1\7r\2\2\u00e1"+
		"\u00e2\7g\2\2\u00e2\u00e3\7p\2\2\u00e3\u00e4\7f\2\2\u00e4\26\3\2\2\2\u00e5"+
		"\u00e6\7x\2\2\u00e6\u00e7\7g\2\2\u00e7\u00e8\7t\2\2\u00e8\u00e9\7k\2\2"+
		"\u00e9\u00ea\7h\2\2\u00ea\u00eb\7{\2\2\u00eb\30\3\2\2\2\u00ec\u00ed\7"+
		"\60\2\2\u00ed\u00ee\7f\2\2\u00ee\u00ef\7g\2\2\u00ef\u00f0\7h\2\2\u00f0"+
		"\u00f1\7c\2\2\u00f1\u00f2\7w\2\2\u00f2\u00f3\7n\2\2\u00f3\u00f4\7v\2\2"+
		"\u00f4\32\3\2\2\2\u00f5\u00f6\7%\2\2\u00f6\34\3\2\2\2\u00f7\u00f8\7i\2"+
		"\2\u00f8\u00f9\7k\2\2\u00f9\u00fa\7v\2\2\u00fa\u00fb\7j\2\2\u00fb\u00fc"+
		"\7w\2\2\u00fc\u00fd\7d\2\2\u00fd\36\3\2\2\2\u00fe\u00ff\7Y\2\2\u00ff\u0100"+
		"\7k\2\2\u0100\u0101\7p\2\2\u0101\u0102\7f\2\2\u0102\u0103\7q\2\2\u0103"+
		"\u0104\7y\2\2\u0104 \3\2\2\2\u0105\u0106\7p\2\2\u0106\u0107\7g\2\2\u0107"+
		"\u0108\7y\2\2\u0108\u0109\7\"\2\2\u0109\u010a\7E\2\2\u010a\u010b\7q\2"+
		"\2\u010b\u010c\7o\2\2\u010c\u010d\7r\2\2\u010d\u010e\7q\2\2\u010e\u010f"+
		"\7p\2\2\u010f\u0110\7g\2\2\u0110\u0111\7p\2\2\u0111\u0112\7v\2\2\u0112"+
		"\"\3\2\2\2\u0113\u0114\7e\2\2\u0114\u0115\7j\2\2\u0115\u0116\7c\2\2\u0116"+
		"\u0117\7p\2\2\u0117\u0118\7i\2\2\u0118\u0119\7g\2\2\u0119\u011a\7V\2\2"+
		"\u011a\u011b\7g\2\2\u011b\u011c\7z\2\2\u011c\u011d\7v\2\2\u011d$\3\2\2"+
		"\2\u011e\u011f\7h\2\2\u011f\u0120\7w\2\2\u0120\u0121\7p\2\2\u0121\u0122"+
		"\7e\2\2\u0122\u0123\7\"\2\2\u0123\u0124\7o\2\2\u0124\u0125\7c\2\2\u0125"+
		"\u0126\7k\2\2\u0126\u0127\7p\2\2\u0127\u0128\7*\2\2\u0128\u0129\7+\2\2"+
		"\u0129&\3\2\2\2\u012a\u012b\7g\2\2\u012b\u012c\7p\2\2\u012c\u012d\7f\2"+
		"\2\u012d\u012e\7e\2\2\u012e(\3\2\2\2\u012f\u0130\7u\2\2\u0130\u0131\7"+
		"v\2\2\u0131\u0132\7f\2\2\u0132\u0133\7<\2\2\u0133\u0134\7n\2\2\u0134\u0135"+
		"\7p\2\2\u0135*\3\2\2\2\u0136\u0137\7E\2\2\u0137\u0138\7q\2\2\u0138\u0139"+
		"\7o\2\2\u0139\u013a\7r\2\2\u013a\u013b\7q\2\2\u013b\u013c\7p\2\2\u013c"+
		"\u013d\7g\2\2\u013d\u013e\7p\2\2\u013e\u013f\7v\2\2\u013f,\3\2\2\2\u0140"+
		"\u0141\7t\2\2\u0141\u0142\7g\2\2\u0142\u0143\7p\2\2\u0143\u0144\7f\2\2"+
		"\u0144\u0145\7g\2\2\u0145\u0146\7t\2\2\u0146.\3\2\2\2\u0147\u0148\7c\2"+
		"\2\u0148\u0149\7f\2\2\u0149\u014a\7f\2\2\u014a\u014b\7E\2\2\u014b\u014c"+
		"\7q\2\2\u014c\u014d\7o\2\2\u014d\u014e\7r\2\2\u014e\60\3\2\2\2\u014f\u0150"+
		"\7p\2\2\u0150\u0151\7g\2\2\u0151\u0152\7y\2\2\u0152\62\3\2\2\2\u0153\u0154"+
		"\7p\2\2\u0154\u0155\7g\2\2\u0155\u0156\7y\2\2\u0156\u0157\7\"\2\2\u0157"+
		"\u0158\7Y\2\2\u0158\u0159\7k\2\2\u0159\u015a\7p\2\2\u015a\u015b\7f\2\2"+
		"\u015b\u015c\7q\2\2\u015c\u015d\7y\2\2\u015d\64\3\2\2\2\u015e\u015f\7"+
		"x\2\2\u015f\u0160\7c\2\2\u0160\u0161\7t\2\2\u0161\66\3\2\2\2\u0162\u0163"+
		"\7Y\2\2\u0163\u0164\7g\2\2\u0164\u0165\7d\2\2\u0165\u0166\7U\2\2\u0166"+
		"\u0167\7g\2\2\u0167\u0168\7t\2\2\u0168\u0169\7x\2\2\u0169\u016a\7g\2\2"+
		"\u016a\u016b\7t\2\2\u016b\u016c\7\60\2\2\u016c\u016d\7e\2\2\u016d\u016e"+
		"\7j\2\2\u016e\u016f\7c\2\2\u016f\u0170\7p\2\2\u0170\u0171\7i\2\2\u0171"+
		"\u0172\7g\2\2\u0172\u0173\7V\2\2\u0173\u0174\7g\2\2\u0174\u0175\7z\2\2"+
		"\u0175\u0176\7v\2\2\u01768\3\2\2\2\u0177\u0178\7k\2\2\u0178\u0179\7o\2"+
		"\2\u0179\u017a\7r\2\2\u017a\u017b\7q\2\2\u017b\u017c\7t\2\2\u017c\u017d"+
		"\7v\2\2\u017d:\3\2\2\2\u017e\u017f\7u\2\2\u017f\u0180\7v\2\2\u0180\u0181"+
		"\7f\2\2\u0181\u0182\7<\2\2\u0182\u0183\7q\2\2\u0183\u0184\7w\2\2\u0184"+
		"\u0185\7v\2\2\u0185<\3\2\2\2\u0186\u0187\7u\2\2\u0187\u0188\7v\2\2\u0188"+
		"\u0189\7f\2\2\u0189\u018a\7<\2\2\u018a\u018b\7k\2\2\u018b\u018c\7p\2\2"+
		"\u018c>\3\2\2\2\u018d\u018e\7c\2\2\u018e\u018f\7u\2\2\u018f\u0190\7u\2"+
		"\2\u0190\u0191\7g\2\2\u0191\u0192\7t\2\2\u0192\u0193\7v\2\2\u0193@\3\2"+
		"\2\2\u0194\u0195\7y\2\2\u0195\u0196\7c\2\2\u0196\u0197\7k\2\2\u0197\u0198"+
		"\7v\2\2\u0198B\3\2\2\2\u0199\u019a\7u\2\2\u019a\u019b\7k\2\2\u019b\u019c"+
		"\7|\2\2\u019c\u019d\7g\2\2\u019dD\3\2\2\2\u019e\u019f\7h\2\2\u019f\u01a0"+
		"\7w\2\2\u01a0\u01a1\7p\2\2\u01a1\u01a2\7e\2\2\u01a2F\3\2\2\2\u01a3\u01a4"+
		"\7v\2\2\u01a4\u01a5\7q\2\2\u01a5\u01a6\7K\2\2\u01a6\u01a7\7p\2\2\u01a7"+
		"\u01a8\7v\2\2\u01a8H\3\2\2\2\u01a9\u01aa\7e\2\2\u01aa\u01ab\7t\2\2\u01ab"+
		"\u01ac\7g\2\2\u01ac\u01ad\7c\2\2\u01ad\u01ae\7v\2\2\u01ae\u01af\7g\2\2"+
		"\u01afJ\3\2\2\2\u01b0\u01b1\7Y\2\2\u01b1\u01b2\7g\2\2\u01b2\u01b3\7d\2"+
		"\2\u01b3\u01b4\7U\2\2\u01b4\u01b5\7g\2\2\u01b5\u01b6\7t\2\2\u01b6\u01b7"+
		"\7x\2\2\u01b7\u01b8\7g\2\2\u01b8\u01b9\7t\2\2\u01b9L\3\2\2\2\u01ba\u01bb"+
		"\7k\2\2\u01bb\u01bc\7h\2\2\u01bcN\3\2\2\2\u01bd\u01be\7g\2\2\u01be\u01bf"+
		"\7n\2\2\u01bf\u01c0\7u\2\2\u01c0\u01c1\7g\2\2\u01c1P\3\2\2\2\u01c2\u01c3"+
		"\7t\2\2\u01c3\u01c4\7g\2\2\u01c4\u01c5\7v\2\2\u01c5\u01c6\7w\2\2\u01c6"+
		"\u01c7\7t\2\2\u01c7\u01c8\7p\2\2\u01c8R\3\2\2\2\u01c9\u01ca\7h\2\2\u01ca"+
		"\u01cb\7q\2\2\u01cb\u01cc\7t\2\2\u01ccT\3\2\2\2\u01cd\u01ce\7y\2\2\u01ce"+
		"\u01cf\7j\2\2\u01cf\u01d0\7k\2\2\u01d0\u01d1\7n\2\2\u01d1\u01d2\7g\2\2"+
		"\u01d2V\3\2\2\2\u01d3\u01d4\7v\2\2\u01d4\u01d5\7q\2\2\u01d5X\3\2\2\2\u01d6"+
		"\u01d7\7f\2\2\u01d7\u01d8\7q\2\2\u01d8Z\3\2\2\2\u01d9\u01da\7g\2\2\u01da"+
		"\u01db\7p\2\2\u01db\u01dc\7f\2\2\u01dc\u01dd\7h\2\2\u01dd\\\3\2\2\2\u01de"+
		"\u01df\7k\2\2\u01df\u01e0\7p\2\2\u01e0^\3\2\2\2\u01e1\u01e2\7p\2\2\u01e2"+
		"\u01e3\7w\2\2\u01e3\u01e4\7n\2\2\u01e4\u01e5\7n\2\2\u01e5`\3\2\2\2\u01e6"+
		"\u01e7\7v\2\2\u01e7\u01e8\7t\2\2\u01e8\u01e9\7{\2\2\u01e9b\3\2\2\2\u01ea"+
		"\u01eb\7e\2\2\u01eb\u01ec\7c\2\2\u01ec\u01ed\7v\2\2\u01ed\u01ee\7e\2\2"+
		"\u01ee\u01ef\7j\2\2\u01efd\3\2\2\2\u01f0\u01f1\7e\2\2\u01f1\u01f2\7n\2"+
		"\2\u01f2\u01f3\7c\2\2\u01f3\u01f4\7u\2\2\u01f4\u01f5\7u\2\2\u01f5f\3\2"+
		"\2\2\u01f6\u01f7\7e\2\2\u01f7\u01f8\7t\2\2\u01f8\u01f9\7g\2\2\u01f9\u01fa"+
		"\7c\2\2\u01fa\u01fb\7v\2\2\u01fb\u01fc\7g\2\2\u01fc\u01fd\7E\2\2\u01fd"+
		"\u01fe\7n\2\2\u01fe\u01ff\7c\2\2\u01ff\u0200\7u\2\2\u0200\u0201\7u\2\2"+
		"\u0201h\3\2\2\2\u0202\u0203\7~\2\2\u0203\u0204\7~\2\2\u0204j\3\2\2\2\u0205"+
		"\u0206\7(\2\2\u0206\u0207\7(\2\2\u0207l\3\2\2\2\u0208\u0209\7?\2\2\u0209"+
		"\u020a\7?\2\2\u020an\3\2\2\2\u020b\u020c\7#\2\2\u020c\u020d\7?\2\2\u020d"+
		"p\3\2\2\2\u020e\u020f\7@\2\2\u020f\u0210\7?\2\2\u0210r\3\2\2\2\u0211\u0212"+
		"\7>\2\2\u0212\u0213\7?\2\2\u0213t\3\2\2\2\u0214\u0215\7`\2\2\u0215v\3"+
		"\2\2\2\u0216\u0217\7#\2\2\u0217x\3\2\2\2\u0218\u0219\7@\2\2\u0219z\3\2"+
		"\2\2\u021a\u021b\7>\2\2\u021b|\3\2\2\2\u021c\u021d\7-\2\2\u021d~\3\2\2"+
		"\2\u021e\u021f\7/\2\2\u021f\u0080\3\2\2\2\u0220\u0221\7,\2\2\u0221\u0082"+
		"\3\2\2\2\u0222\u0223\7\61\2\2\u0223\u0084\3\2\2\2\u0224\u0225\7\'\2\2"+
		"\u0225\u0086\3\2\2\2\u0226\u0227\7}\2\2\u0227\u0088\3\2\2\2\u0228\u0229"+
		"\7\177\2\2\u0229\u008a\3\2\2\2\u022a\u022b\7]\2\2\u022b\u008c\3\2\2\2"+
		"\u022c\u022d\7_\2\2\u022d\u008e\3\2\2\2\u022e\u022f\7*\2\2\u022f\u0090"+
		"\3\2\2\2\u0230\u0231\7+\2\2\u0231\u0092\3\2\2\2\u0232\u0233\7=\2\2\u0233"+
		"\u0094\3\2\2\2\u0234\u0235\7?\2\2\u0235\u0096\3\2\2\2\u0236\u0237\7.\2"+
		"\2\u0237\u0098\3\2\2\2\u0238\u0239\7A\2\2\u0239\u009a\3\2\2\2\u023a\u023b"+
		"\7<\2\2\u023b\u009c\3\2\2\2\u023c\u023d\7v\2\2\u023d\u023e\7t\2\2\u023e"+
		"\u023f\7w\2\2\u023f\u0246\7g\2\2\u0240\u0241\7h\2\2\u0241\u0242\7c\2\2"+
		"\u0242\u0243\7n\2\2\u0243\u0244\7u\2\2\u0244\u0246\7g\2\2\u0245\u023c"+
		"\3\2\2\2\u0245\u0240\3\2\2\2\u0246\u009e\3\2\2\2\u0247\u024f\5\u00abV"+
		"\2\u0248\u024c\7\60\2\2\u0249\u024b\5\u00adW\2\u024a\u0249\3\2\2\2\u024b"+
		"\u024e\3\2\2\2\u024c\u024a\3\2\2\2\u024c\u024d\3\2\2\2\u024d\u0250\3\2"+
		"\2\2\u024e\u024c\3\2\2\2\u024f\u0248\3\2\2\2\u024f\u0250\3\2\2\2\u0250"+
		"\u00a0\3\2\2\2\u0251\u0255\t\2\2\2\u0252\u0254\t\3\2\2\u0253\u0252\3\2"+
		"\2\2\u0254\u0257\3\2\2\2\u0255\u0253\3\2\2\2\u0255\u0256\3\2\2\2\u0256"+
		"\u00a2\3\2\2\2\u0257\u0255\3\2\2\2\u0258\u025e\t\4\2\2\u0259\u025d\n\5"+
		"\2\2\u025a\u025b\7^\2\2\u025b\u025d\n\6\2\2\u025c\u0259\3\2\2\2\u025c"+
		"\u025a\3\2\2\2\u025d\u0260\3\2\2\2\u025e\u025c\3\2\2\2\u025e\u025f\3\2"+
		"\2\2\u025f\u0261\3\2\2\2\u0260\u025e\3\2\2\2\u0261\u026d\t\4\2\2\u0262"+
		"\u0268\t\7\2\2\u0263\u0267\n\b\2\2\u0264\u0265\7^\2\2\u0265\u0267\n\6"+
		"\2\2\u0266\u0263\3\2\2\2\u0266\u0264\3\2\2\2\u0267\u026a\3\2\2\2\u0268"+
		"\u0266\3\2\2\2\u0268\u0269\3\2\2\2\u0269\u026b\3\2\2\2\u026a\u0268\3\2"+
		"\2\2\u026b\u026d\t\7\2\2\u026c\u0258\3\2\2\2\u026c\u0262\3\2\2\2\u026d"+
		"\u00a4\3\2\2\2\u026e\u026f\7\61\2\2\u026f\u0270\7\61\2\2\u0270\u0274\3"+
		"\2\2\2\u0271\u0273\n\6\2\2\u0272\u0271\3\2\2\2\u0273\u0276\3\2\2\2\u0274"+
		"\u0272\3\2\2\2\u0274\u0275\3\2\2\2\u0275\u0283\3\2\2\2\u0276\u0274\3\2"+
		"\2\2\u0277\u0278\7\61\2\2\u0278\u0279\7,\2\2\u0279\u027d\3\2\2\2\u027a"+
		"\u027c\13\2\2\2\u027b\u027a\3\2\2\2\u027c\u027f\3\2\2\2\u027d\u027e\3"+
		"\2\2\2\u027d\u027b\3\2\2\2\u027e\u0280\3\2\2\2\u027f\u027d\3\2\2\2\u0280"+
		"\u0281\7,\2\2\u0281\u0283\7\61\2\2\u0282\u026e\3\2\2\2\u0282\u0277\3\2"+
		"\2\2\u0283\u0284\3\2\2\2\u0284\u0285\bS\2\2\u0285\u00a6\3\2\2\2\u0286"+
		"\u028c\t\4\2\2\u0287\u028b\n\4\2\2\u0288\u0289\7^\2\2\u0289\u028b\n\6"+
		"\2\2\u028a\u0287\3\2\2\2\u028a\u0288\3\2\2\2\u028b\u028e\3\2\2\2\u028c"+
		"\u028a\3\2\2\2\u028c\u028d\3\2\2\2\u028d\u028f\3\2\2\2\u028e\u028c\3\2"+
		"\2\2\u028f\u0290\t\4\2\2\u0290\u00a8\3\2\2\2\u0291\u0292\t\t\2\2\u0292"+
		"\u0293\3\2\2\2\u0293\u0294\bU\2\2\u0294\u00aa\3\2\2\2\u0295\u0299\t\n"+
		"\2\2\u0296\u0298\5\u00adW\2\u0297\u0296\3\2\2\2\u0298\u029b\3\2\2\2\u0299"+
		"\u0297\3\2\2\2\u0299\u029a\3\2\2\2\u029a\u029e\3\2\2\2\u029b\u0299\3\2"+
		"\2\2\u029c\u029e\7\62\2\2\u029d\u0295\3\2\2\2\u029d\u029c\3\2\2\2\u029e"+
		"\u00ac\3\2\2\2\u029f\u02a0\t\13\2\2\u02a0\u00ae\3\2\2\2\23\2\u0245\u024c"+
		"\u024f\u0255\u025c\u025e\u0266\u0268\u026c\u0274\u027d\u0282\u028a\u028c"+
		"\u0299\u029d\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}